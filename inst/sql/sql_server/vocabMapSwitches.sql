IF OBJECT_ID('tempdb..#SOURCE_TO_STANDARD_OLD') IS NOT NULL
    DROP TABLE tempdb..#SOURCE_TO_STANDARD_OLD;

SELECT *
INTO #SOURCE_TO_STANDARD_OLD
FROM (

	SELECT cast(c.concept_id as varchar)+'-'+cast(c1.concept_id as varchar) as UNIQUE_ID, c.concept_code AS SOURCE_CODE, c.concept_id AS SOURCE_CONCEPT_ID, c.concept_name AS SOURCE_CODE_DESCRIPTION,
			c.vocabulary_id AS SOURCE_VOCABULARY_ID, c.domain_id AS SOURCE_DOMAIN_ID, c.CONCEPT_CLASS_ID AS SOURCE_CONCEPT_CLASS_ID,
			c.VALID_START_DATE AS SOURCE_VALID_START_DATE, c.VALID_END_DATE AS SOURCE_VALID_END_DATE, c.INVALID_REASON AS SOURCE_INVALID_REASON,
			c1.concept_id AS TARGET_CONCEPT_ID, c1.concept_name AS TARGET_CONCEPT_NAME, c1.VOCABULARY_ID AS TARGET_VOCABULARY_ID,
			c1.domain_id AS TARGET_DOMAIN_ID, c1.concept_class_id AS TARGET_CONCEPT_CLASS_ID,c1.INVALID_REASON AS TARGET_INVALID_REASON,
			c1.standard_concept AS TARGET_STANDARD_CONCEPT
	FROM @oldVocabSchema.CONCEPT C
		JOIN @oldVocabSchema.CONCEPT_RELATIONSHIP CR
			ON C.CONCEPT_ID = CR.CONCEPT_ID_1
			AND CR.invalid_reason IS NULL
			AND lower(cr.relationship_id) = 'maps to'
		JOIN @oldVocabSchema.CONCEPT C1
			ON CR.CONCEPT_ID_2 = C1.CONCEPT_ID
			AND C1.INVALID_REASON IS NULL
	UNION
	SELECT CAST(source_concept_id as varchar)+'-'+cast(TARGET_CONCEPT_ID as varchar) as UNIQUE_ID, source_code, SOURCE_CONCEPT_ID, SOURCE_CODE_DESCRIPTION, source_vocabulary_id, c1.domain_id AS SOURCE_DOMAIN_ID,
			c2.CONCEPT_CLASS_ID AS SOURCE_CONCEPT_CLASS_ID, c1.VALID_START_DATE AS SOURCE_VALID_START_DATE,
			c1.VALID_END_DATE AS SOURCE_VALID_END_DATE, stcm.INVALID_REASON AS SOURCE_INVALID_REASON,
			target_concept_id, c2.CONCEPT_NAME AS TARGET_CONCEPT_NAME, target_vocabulary_id, c2.domain_id AS TARGET_DOMAIN_ID,
			c2.concept_class_id AS TARGET_CONCEPT_CLASS_ID,c2.INVALID_REASON AS TARGET_INVALID_REASON,
			c2.standard_concept AS TARGET_STANDARD_CONCEPT
	FROM @oldVocabSchema.source_to_concept_map stcm
		LEFT OUTER JOIN @oldVocabSchema.CONCEPT c1
			ON c1.concept_id = stcm.source_concept_id
		LEFT OUTER JOIN @oldVocabSchema.CONCEPT c2
			ON c2.CONCEPT_ID = stcm.target_concept_id
	WHERE stcm.INVALID_REASON IS NULL
) STSO

IF OBJECT_ID('tempdb..#SOURCE_TO_STANDARD_NEW') IS NOT NULL
    DROP TABLE tempdb..#SOURCE_TO_STANDARD_NEW;

SELECT *
INTO #SOURCE_TO_STANDARD_NEW
FROM (


	SELECT cast(c.concept_id as varchar)+'-'+cast(c1.concept_id as varchar) as UNIQUE_ID, c.concept_code AS SOURCE_CODE, c.concept_id AS SOURCE_CONCEPT_ID, c.concept_name AS SOURCE_CODE_DESCRIPTION,
			c.vocabulary_id AS SOURCE_VOCABULARY_ID, c.domain_id AS SOURCE_DOMAIN_ID, c.CONCEPT_CLASS_ID AS SOURCE_CONCEPT_CLASS_ID,
			c.VALID_START_DATE AS SOURCE_VALID_START_DATE, c.VALID_END_DATE AS SOURCE_VALID_END_DATE, c.INVALID_REASON AS SOURCE_INVALID_REASON,
			c1.concept_id AS TARGET_CONCEPT_ID, c1.concept_name AS TARGET_CONCEPT_NAME, c1.VOCABULARY_ID AS TARGET_VOCABULARY_ID,
			c1.domain_id AS TARGET_DOMAIN_ID, c1.concept_class_id AS TARGET_CONCEPT_CLASS_ID,c1.INVALID_REASON AS TARGET_INVALID_REASON,
			c1.standard_concept AS TARGET_STANDARD_CONCEPT
	FROM @newVocabSchema.CONCEPT C
		JOIN @newVocabSchema.CONCEPT_RELATIONSHIP CR
			ON C.CONCEPT_ID = CR.CONCEPT_ID_1
			AND CR.invalid_reason IS NULL
			AND lower(cr.relationship_id) = 'maps to'
		JOIN @newVocabSchema.CONCEPT C1
			ON CR.CONCEPT_ID_2 = C1.CONCEPT_ID
			AND C1.INVALID_REASON IS NULL
	UNION
	SELECT cast(SOURCE_CONCEPT_ID as varchar)+'-'+cast(TARGET_CONCEPT_ID as varchar) as UNIQUE_ID, source_code, SOURCE_CONCEPT_ID, SOURCE_CODE_DESCRIPTION, source_vocabulary_id, c1.domain_id AS SOURCE_DOMAIN_ID,
			c2.CONCEPT_CLASS_ID AS SOURCE_CONCEPT_CLASS_ID, c1.VALID_START_DATE AS SOURCE_VALID_START_DATE,
			c1.VALID_END_DATE AS SOURCE_VALID_END_DATE, stcm.INVALID_REASON AS SOURCE_INVALID_REASON,
			target_concept_id, c2.CONCEPT_NAME AS TARGET_CONCEPT_NAME, target_vocabulary_id, c2.domain_id AS TARGET_DOMAIN_ID,
			c2.concept_class_id AS TARGET_CONCEPT_CLASS_ID,c2.INVALID_REASON AS TARGET_INVALID_REASON,
			c2.standard_concept AS TARGET_STANDARD_CONCEPT
	FROM @newVocabSchema.source_to_concept_map stcm
		LEFT OUTER JOIN @newVocabSchema.CONCEPT c1
			ON c1.concept_id = stcm.source_concept_id
		LEFT OUTER JOIN @newVocabSchema.CONCEPT c2
			ON c2.CONCEPT_ID = stcm.target_concept_id
	WHERE stcm.INVALID_REASON IS NULL
) STSN

IF OBJECT_ID('@target_database_schema.@map_switches_table') IS NOT NULL
    DROP TABLE @target_database_schema.@map_switches_table;
SELECT *
INTO @target_database_schema.@map_switches_table
FROM (

	SELECT O.UNIQUE_ID,
			O.SOURCE_CODE,
			O.SOURCE_CONCEPT_ID,
			O.SOURCE_VOCABULARY_ID,
			O.OLD_TARGET_CONCEPT_ID,
			O.MAP_EXISTS_IN_NEW_VOCAB,
			CASE
				WHEN O.SOURCE_CONCEPT_ID IN (SELECT CONCEPT_ID FROM @newVocabSchema.CONCEPT WHERE INVALID_REASON IS NULL)
					THEN 1
			ELSE 0 END AS SOURCE_CODE_IN_NEW_VOCAB,
			CASE
				WHEN O.OLD_TARGET_CONCEPT_ID IN (SELECT CONCEPT_ID FROM @newVocabSchema.CONCEPT WHERE INVALID_REASON IS NOT NULL)
					THEN 1
			ELSE 0 END AS OLD_TARGET_DEPRECATED,
			CASE
				WHEN N.TARGET_CONCEPT_ID IS NULL
					THEN 0
			ELSE N.TARGET_CONCEPT_ID END AS NEW_TARGET_CONCEPT_ID,
			TARGET_DOMAIN_ID AS NEW_TARGET_DOMAIN_ID,
			CASE
				WHEN N.UNIQUE_ID IN (SELECT UNIQUE_ID FROM #SOURCE_TO_STANDARD_OLD)
					THEN 1
			ELSE 0 END AS NEW_MAP_EXISTS_IN_OLD_VOCAB,
			ROW_NUMBER() OVER (PARTITION BY O.UNIQUE_ID ORDER BY O.UNIQUE_ID) AS RN
	FROM(
	SELECT O.UNIQUE_ID,
			O.SOURCE_CODE,
			O.SOURCE_CONCEPT_ID,
			O.SOURCE_VOCABULARY_ID,
			O.TARGET_CONCEPT_ID AS OLD_TARGET_CONCEPT_ID,
			CASE
				WHEN O.UNIQUE_ID IN (
										SELECT UNIQUE_ID FROM #SOURCE_TO_STANDARD_NEW
										)
				THEN 1
			ELSE 0
			END AS MAP_EXISTS_IN_NEW_VOCAB
	FROM #SOURCE_TO_STANDARD_OLD O
	WHERE SOURCE_VOCABULARY_ID NOT LIKE 'JNJ%' AND SOURCE_CONCEPT_ID <> 0
	) O
	LEFT JOIN #SOURCE_TO_STANDARD_NEW N
		ON O.SOURCE_CONCEPT_ID = N.SOURCE_CONCEPT_ID
	WHERE O.MAP_EXISTS_IN_NEW_VOCAB = 0
) A
;
